<!DOCTYPE html>
<html lang="en">
   <head>        
      <meta charset="UTF-8">          
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
          
      <title>Tic Tac Toe</title>
          
      <link rel="stylesheet" href="./styles.css">          
      <link rel="preconnect" href="https://fonts.gstatic.com">         
      <link href="https://fonts.googleapis.com/css2?family=Nerko+One&display=swap" rel="stylesheet">
      <script src="./script.js" defer></script>
   </head>
   <body>
          
      <div class="container">
                 
         <h1 id="heading">Play</h1>               
         <h2 id="status"></h2>
         <button id="replay">Restart</button>
                 
         <div id="board">                      
            <div class="box" id="0"></div>                     
            <div class="box" id="1"></div>                        
            <div class="box" id="2"></div>                        
            <div class="box" id="3"></div>                        
            <div class="box" id="4"></div>                        
            <div class="box" id="5"></div>                        
            <div class="box" id="6"></div>                        
            <div class="box" id="7"></div>                        
            <div class="box" id="8"></div>                    
         </div>
             
      </div>

    <script>
      const boxes = document.querySelectorAll('.box');
      const text = document.querySelector('#heading');
      const status = document.querySelector('#status');
      const restartButten = document.querySelector('#replay');


    const board = () => {
    boxes.forEach((box, i) => {
    let cell = '';
    if (i < 3) {
      cell += 'border-bottom: 3px solid var(--text);';
    }
    if (i % 3 === 0) {
      cell += 'border-right: 3px solid var(--text);';
    }
    if (i % 3 === 2) {
      cell += 'border-left: 3px solid var(--text);';
    }
    if (i > 5) {
      cell += 'border-top: 3px solid var(--text);';
    }
    box.style = cell;
    box.addEventListener('click', boxClicked);
  });
};


  const spaces = [];
  const tick_circle = 'O';
  const tick_x = 'X';
  let currentPlayer = tick_circle;


  const boxClicked = (e) => {
    const id = e.target.id;
    if (!spaces[id]) {
      spaces[id] = currentPlayer;
      e.target.innerText = currentPlayer;

      if (playerWon()) {
        text.innerText = `${currentPlayer} has won the game`;
        replay();
        return;
      }

      if (playerDraw()) {
        return;
      }
      currentPlayer = currentPlayer === tick_circle ? tick_x : tick_circle;
    }
  };


const playerWon = () => {
  if (spaces[0] === currentPlayer) {
    if (spaces[1] === currentPlayer && spaces[2] === currentPlayer) {
      status.innerText = `${currentPlayer} wins up to top`;
      return true;
    }
    if (spaces[3] === currentPlayer && spaces[6] === currentPlayer) {
      status.innerText = `${currentPlayer} wins on the left`;
      return true;
    }
    if (spaces[4] === currentPlayer && spaces[8] === currentPlayer) {
      status.innerText = `${currentPlayer} wins diagonally`;
      return true;
    }
  }
  if (spaces[8] === currentPlayer) {
    if (spaces[2] === currentPlayer && spaces[5] === currentPlayer) {
      status.innerText = `${currentPlayer} wins on the right`;
      return true;
    }
    if (spaces[6] === currentPlayer && spaces[7] === currentPlayer) {
      status.innerText = `${currentPlayer} wins on the bottom`;
      return true;
    }
  }
  if (spaces[4] === currentPlayer) {
    if (spaces[1] === currentPlayer && spaces[7] === currentPlayer) {
      status.innerText = `${currentPlayer} wins vertically on middle`;
      return true;
    }
    if (spaces[3] === currentPlayer && spaces[5] === currentPlayer) {
      status.innerText = `${currentPlayer} wins horizontally on the middle`;
      return true;
    }
    if (spaces[2] === currentPlayer && spaces[6] === currentPlayer) {
      status.innerText = `${currentPlayer} wins diagonally`;
      return true;
    }
  }
};

const playerDraw = () => {
  let draw = 0;
  spaces.forEach((space, i) => {
    if (spaces[i] !== null) draw++;
  });
  if (draw === 9) {
    text.innerText = `Draw`;
    replay();
  }
};

const replay = () => {
  setTimeout(() => {
    spaces.forEach((space, i) => {
      spaces[i] = null;
    });
    boxes.forEach((box) => {
      box.innerText = '';
    });
    text.innerText = `Play`;
    status.innerText = ``;
  }, 1000);
};

restartButten.addEventListener('click', replay);
replay();
board();
   </script>
   </body>

</html>